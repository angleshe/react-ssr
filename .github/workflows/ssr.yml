name: Node CI
on:
  push:
    branches:
      - blogDemo
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Injection dependency & build project
        run: |
          npm install
          npm run build
      - name: init database
        run: |
          export NODE_ENV=production
          export DB_USERNAME=${{ secrets.mysql_user }}
          export DB_PASSWORD=${{ secrets.mysql_password }}
          export DB_HOSTNAME=${{ secrets.mysql_root }}
          npx sequelize db:create
          npx sequelize db:migrate
          npx sequelize db:seed:all
      - name: build and push docker
        run: |
          docker build -t react_ssr .
          docker save react_ssr > react_ssr.tar
      - name: Publishing container
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.server_root }}
          username: ${{ secrets.server_username }}
          password: ${{ secrets.server_password }}
          port: ${{ secrets.server_port }}
          source: "react_ssr.tar"
          target: "/"
      - name: setup server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.server_root }}
          username: ${{ secrets.server_username }}
          password: ${{ secrets.server_password }}
          port: ${{ secrets.server_port }}
          script: |
            docker stop react_ssr || true
            docker rm react_ssr || true
            docker load < /react_ssr.tar
            docker run -d -p 80:7001 -v /var/log/react_ssr:/root/logs --name react_ssr react_ssr
            rm /react_ssr.tar
